# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from distrl.a3c import a3c_pb2 as distrl_dot_a3c_dot_a3c__pb2


class CoordinatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PushGradients = channel.unary_unary(
                '/distributed_rl.a3c.Coordinator/PushGradients',
                request_serializer=distrl_dot_a3c_dot_a3c__pb2.ParametersMessage.SerializeToString,
                response_deserializer=distrl_dot_a3c_dot_a3c__pb2.VersionMessage.FromString,
                )
        self.Synchronize = channel.unary_unary(
                '/distributed_rl.a3c.Coordinator/Synchronize',
                request_serializer=distrl_dot_a3c_dot_a3c__pb2.VersionMessage.SerializeToString,
                response_deserializer=distrl_dot_a3c_dot_a3c__pb2.ParametersMessage.FromString,
                )


class CoordinatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PushGradients(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Synchronize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CoordinatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PushGradients': grpc.unary_unary_rpc_method_handler(
                    servicer.PushGradients,
                    request_deserializer=distrl_dot_a3c_dot_a3c__pb2.ParametersMessage.FromString,
                    response_serializer=distrl_dot_a3c_dot_a3c__pb2.VersionMessage.SerializeToString,
            ),
            'Synchronize': grpc.unary_unary_rpc_method_handler(
                    servicer.Synchronize,
                    request_deserializer=distrl_dot_a3c_dot_a3c__pb2.VersionMessage.FromString,
                    response_serializer=distrl_dot_a3c_dot_a3c__pb2.ParametersMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'distributed_rl.a3c.Coordinator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Coordinator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PushGradients(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed_rl.a3c.Coordinator/PushGradients',
            distrl_dot_a3c_dot_a3c__pb2.ParametersMessage.SerializeToString,
            distrl_dot_a3c_dot_a3c__pb2.VersionMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Synchronize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/distributed_rl.a3c.Coordinator/Synchronize',
            distrl_dot_a3c_dot_a3c__pb2.VersionMessage.SerializeToString,
            distrl_dot_a3c_dot_a3c__pb2.ParametersMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
